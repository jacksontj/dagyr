# TODO
    - what to do with invalid return type (how to handle the error)-- abort DAG?
    - better conversion/visualization/editor tools?
        -- convert DAG to embedded view (for reading)
        -- convert DAG to image (with labels etc.)
    - support processing_nodes returning futures (some non-blocking task)
    - Callback API in DAGExecutor to call with state after every dag/step?
        - thinking of the autoremediation case-- some of these steps may take a LONG
            time to complete (hours+), so the state might want to be persisted

        - Need to decide, should this be `Dagyr` wide, or `DagExecutor` wide
        Delegate methods (set in the DagExecutionContext), methods for:
            - start DAG
            - Start Node
            - end node
            - end dag

    - Config
        -- name and info are the same 99% of the time, we should probably make
            info optional and default to "name"

- make graph validation pluggable (delegate model)
    -- this will allow arbitrary graph execution
    -- pass either pointer to dag, or generator of nodes/edges? (TODO)
- change processing_function_type to list the valid returns of a given function
    -- warn if the processing_node_type doesn't account for all of them (maybe require that they specify it just going nowhere?)
- change DAG cyclic validation (and path listing) to use the inlet/outlets
- change "path" thing to include additional metadata (inlet_it, outlet_id, time, return, CPU cycles, etc.)
- multiple "execution" types (trace/strict/etc.)
